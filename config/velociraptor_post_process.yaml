Preamble: |
  name: Windows.Sigma.PostProcess
  type: SERVER
  parameters:
    - name: Debug
      type: bool
      description: Enable full debug trace
    - name: RuleLevel
      type: choices
      default: Critical
      choices:
        - Critical
        - Critical and High
        - All

    - name: RuleStatus
      type: choices
      default: Stable
      choices:
        - Stable
        - Stable and Experimental
        - Stable and Test
        - All Rules

    - name: RuleTitleFilter
      type: regex
      default: .
      description: Use this to filter only some rules to match

    - name: SigmaRules
      description: If provided we use these rules instead of the built in set.

    - name: SleepCounter
      type: int
      default: 1
      description: How long to sleep between queries.
    
    - name: ClientId
      type: string
      default: C.462c0a606d182360
      description: The client ID to use for the query.

  sources:
  - query: |
      LET RuleStatusRegex <= get(item=dict(
         `Stable`="stable",
         `Stable and Experimental`="stable|experimental",
         `Stable and Test`="stable|test",
         `All Rules`="."), member=RuleStatus)

      LET RuleLevelRegex <= get(item=dict(
         Critical="critical",
         `Critical and High`="critical|high",
         `All`="."), member=RuleLevel)

      LET PstreeFlow = SELECT request.flow_id AS flowId FROM flows(client_id=ClientId) WHERE artifacts_with_results =~ "Generic.System.Pstree"

FieldMappings:
  CallChain: 'x=>x.CallChain'
  CommandLine: 'x=>x.CommandLine'
  Image: 'x=>x.Image || x.Exe'
  md5: 'x=>x.Hash.MD5'
  ProcessName: 'x=>x.Name'
  sha1: 'x=>x.Hash.SHA1'
  sha256: 'x=>x.Hash.SHA256'
  User: 'x=>x.Username'
  Username: 'x=>x.Username'

DefaultDetails:
  Query: |
    x=>get(item=DefaultDetails,
           member=format(format="%v/%v",
              args=[x.System.Provider.Name, x.System.EventID.Value])
          ) || x.Message || x.UserData || x.EventData || x
  
  Lookup:
    Microsoft-Windows-Bits-Client/3: "JobTitle: %jobTitle% ¦ JobID: %jobId% ¦ JobOwner: %jobOwner% ¦ Proc: %processPath% ¦ PID: %ProcessId%"
    PowerShellCore/4103: "Payload: %Payload%"
    PowerShellCore/4104: "ScriptBlock: %ScriptBlockText%"

Sources:
  process_creation/windows/pslist: 
    query: |
      SELECT * FROM flow_results(client_id=ClientId, flow_id=PstreeFlow.flowId, artifact="Generic.System.Pstree")

QueryTemplate: |
   LET Rules <= SigmaRules || gunzip(string=base64decode(string="{{.Base64CompressedRules}}"))
   LET FieldMapping <= parse_json(data=gunzip(string=base64decode(string="{{.Base64FieldMapping}}")))
   LET DefaultDetails <= parse_json(data=gunzip(string=base64decode(string="{{.Base64DefaultDetailsLookup}}")))
   LET X = scope()

   SELECT Details.StartTime AS StartTime,
          _Rule.Level AS Level,
          _Rule.Title AS Title,
          Details,
          X AS _Event
    FROM sigma(
      rules=split(string= Rules, sep_string="\n---\n"),
      log_sources= LogSources, debug=Debug,
      default_details='x=>x',
      rule_filter="x=>x.Level =~ RuleLevelRegex AND x.Status =~ RuleStatusRegex AND x.Title =~ RuleTitleFilter",
      field_mapping= FieldMapping)


RuleDirectories:
  - ./rules/test_rules/