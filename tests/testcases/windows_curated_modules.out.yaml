LET temp <= "C:\\tmp\\"[]LET _ <= SELECT mock(plugin="modules", results=parse_json_array(data=ModulesMock)), mock(plugin="process_tracker_pslist", results=parse_json_array(data=PsListMock)), mock(function="process_tracker_get", results=parse_json_array(data=ProcessTrackerGet)), mock(function="hash", results=parse_json_array(data=HashMock)) FROM scope()[]SELECT * FROM Artifact.Sigma.Windows.Curated(ROOT=temp, SigmaRules=Rules, Debug=True, RuleStatus='All Rules', RuleLevel='All', RuleTitleFilter=".") ORDER BY Timestamp[
 {
  "Timestamp": "2024-02-17T04:26:13.6996281Z",
  "Level": "high",
  "Title": "Golden Test - pslist",
  "References": [
   "https://github.com/Velocidex/velociraptor"
  ],
  "Details": {
   "Timestamp": "2024-02-17T04:26:13.6996281Z",
   "Image": "C:\\bad\\bad.exe",
   "CommandLine": "\"C:\\bad\\bad.exe\" /test -p \"C:\\bad\\bad.dit\"",
   "ProcessMD5": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "ProcessSHA1": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "ProcessSHA256": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "ParentImage": [
    "C:\\Program Files\\PowerShell\\7\\pwsh.exe"
   ],
   "ParentCommandLine": [
    "\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -noexit -command \"try { . \\\"c:\\bad\\bad.ps1\\\" } catch {}\""
   ],
   "PH": [
    {
     "MD5": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
     "SHA1": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
     "SHA256": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    }
   ],
   "ModuleName": "ntdll.dll",
   "ModulePath": "C:\\Windows\\SYSTEM32\\ntdll.dll",
   "MH": [
    {
     "MD5": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
     "SHA1": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
     "SHA256": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    }
   ],
   "GP": [
    {
     "Pid": 1676,
     "Ppid": 1740,
     "Name": "pwsh.exe",
     "Threads": 29,
     "Username": "NT AUTHORITY\\SYSTEM",
     "OwnerSid": "S-1-5-18",
     "CommandLine": "\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -noexit -command \"try { . \\\"c:\\bad\\bad.ps1\\\" } catch {}\"",
     "Exe": "C:\\Program Files\\PowerShell\\7\\pwsh.exe",
     "TokenIsElevated": true,
     "CreateTime": "2024-02-22T09:25:59.2051994Z"
    }
   ],
   "ModuleMD5": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "ModuleSHA1": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "ModuleSHA256": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "GrandParentImage": [
    "C:\\Program Files\\PowerShell\\7\\pwsh.exe"
   ],
   "GrandParentCommandLine": [
    "\"C:\\Program Files\\PowerShell\\7\\pwsh.exe\" -noexit -command \"try { . \\\"c:\\bad\\bad.ps1\\\" } catch {}\""
   ],
   "ParentMD5": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "ParentSHA1": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "ParentSHA256": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ]
  },
  "Debug": {
   "Match": true,
   "SearchResults": {
    "selection_1": true,
    "selection_10": true,
    "selection_11": true,
    "selection_12": true,
    "selection_13": true,
    "selection_14": true,
    "selection_15": true,
    "selection_16": true,
    "selection_17": true,
    "selection_18": true,
    "selection_2": true,
    "selection_3": true,
    "selection_4": true,
    "selection_5": true,
    "selection_6": true,
    "selection_7": true,
    "selection_8": true,
    "selection_9": true
   },
   "ConditionResults": [
    true
   ]
  },
  "_Source": "Sigma.Windows.Curated"
 }
]