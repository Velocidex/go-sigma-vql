LET temp <= "C:\\tmp\\"[]LET _ <= SELECT mock(plugin="process_tracker_pslist", results=parse_json_array(data=PsListMock)), mock(function="process_tracker_get", results=parse_json_array(data=ProcessTrackerGet)), mock(function="hash", results=parse_json_array(data=HashMock)) FROM scope()[]SELECT * FROM Artifact.Sigma.Windows.Curated(ROOT=temp, SigmaRules=Rules, Debug=True, RuleStatus='All Rules', RuleLevel='All', RuleTitleFilter=".") ORDER BY Timestamp[
 {
  "Timestamp": "2024-02-17T04:26:13.6996281Z",
  "Level": "high",
  "Title": "Golden Test - pslist",
  "Details": {
   "Timestamp": "2024-02-17T04:26:13.6996281Z",
   "Image": "C:\\bad\\bad.exe",
   "CommandLine": "\"C:\\bad\\bad.exe\" /test -p \"C:\\bad\\bad.dit\"",
   "MD5": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "SHA1": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "SHA256": [
    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
   ],
   "User": "NT AUTHORITY\\SYSTEM",
   "ParentImage": null,
   "ParentCommandLine": null,
   "PH": null,
   "GP": null,
   "GrandParentImage": null,
   "GrandParentCommandLine": null,
   "ParentMD5": null,
   "ParentSHA1": null,
   "ParentSHA256": null
  },
  "Match": {
   "Match": false,
   "SearchResults": {
    "selection_1": true,
    "selection_10": false,
    "selection_11": true,
    "selection_12": true,
    "selection_13": true,
    "selection_2": false,
    "selection_3": false,
    "selection_4": true,
    "selection_5": true,
    "selection_6": false,
    "selection_7": false,
    "selection_8": false,
    "selection_9": false
   },
   "ConditionResults": [
    false
   ]
  },
  "_Source": "Sigma.Windows.Curated"
 }
]