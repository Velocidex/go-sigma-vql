LET temp <= "C:\\tmp\\"[]LET _ <= SELECT mock(plugin="wmi", results=parse_json_array(data=WMIMock)), mock(plugin="modules", results=parse_json_array(data=ModulesMock)), mock(plugin="process_tracker_pslist", results=parse_json_array(data=PsListMock)), mock(function="process_tracker_get", results=parse_json_array(data=ProcessTrackerGet)), mock(function="hash", results=parse_json_array(data=HashMock)), mock(plugin="netstat", results=parse_json_array(data=NetstatMock)) FROM scope()[]SELECT * FROM Artifact.Sigma.Windows.Curated(ROOT=temp, SigmaRules=Rules, Debug=True, RuleStatus='All Rules', RuleLevel='All', RuleTitleFilter=".") ORDER BY Timestamp[
 {
  "Timestamp": "2024-02-17T04:26:11Z",
  "Level": "high",
  "Title": "Golden Test - netstat",
  "Details": {
   "Timestamp": "2024-02-17T04:26:11Z",
   "LocalIP": "192.168.0.1",
   "LocalPort": 445,
   "RemoteIP": "123.45.56.78",
   "RemotePort": 0,
   "Pid": 10112,
   "Protocol": "TCP",
   "Status": "ESTAB",
   "Image": null,
   "CommandLine": null,
   "ParentImage": null
  },
  "Match": {
   "Match": false,
   "SearchResults": {
    "selection_1": false,
    "selection_2": false,
    "selection_3": true,
    "selection_4": true,
    "selection_5": true,
    "selection_6": true,
    "selection_7": false,
    "selection_8": false,
    "selection_9": false
   },
   "ConditionResults": [
    false
   ]
  },
  "_Source": "Sigma.Windows.Curated"
 }
]